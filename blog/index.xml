<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blogs on Padavan Firmware Mod by 荒野无灯</title>
    <link>http://p4davan.80x86.io/blog/</link>
    <description>Recent content in Blogs on Padavan Firmware Mod by 荒野无灯</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Copyright (c) 2016 - 2017, 荒野无灯; all rights reserved.</copyright>
    <lastBuildDate>Sat, 24 Jun 2017 15:54:30 +0800</lastBuildDate>
    
	<atom:link href="http://p4davan.80x86.io/blog/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Totolink A3004NS 和 HiWiFi B70 固件双车齐发</title>
      <link>http://p4davan.80x86.io/blog/2017/06/24/totolink-a3004ns-and-hiwifi-b70-firmware-released/</link>
      <pubDate>Sat, 24 Jun 2017 15:54:30 +0800</pubDate>
      
      <guid>http://p4davan.80x86.io/blog/2017/06/24/totolink-a3004ns-and-hiwifi-b70-firmware-released/</guid>
      <description>友情提示 刷机有风险,看清再操作.产生任何问题自行承担. 固件界面DEMO 我的padavan固件 的demo 页面就是 基于 3004NS 建立的： http://pdv.80x86.io/ 固件正在编译上</description>
    </item>
    
    <item>
      <title>k2p官改固件或原厂固件下安装breed的方法</title>
      <link>http://p4davan.80x86.io/blog/2017/06/19/k2p-stock-rom-install-breed-bootloader/</link>
      <pubDate>Mon, 19 Jun 2017 21:48:18 +0800</pubDate>
      
      <guid>http://p4davan.80x86.io/blog/2017/06/19/k2p-stock-rom-install-breed-bootloader/</guid>
      <description>首先确保开启了ssh 或 telnet, 然后任选一种方式登录进去控制台. (如果不知道开启, 查看帖子 http://www.right.com.cn/forum/thread-217088-1-1.html) #后面的为实际命令 这里我原来教程是下载的breed下载站</description>
    </item>
    
    <item>
      <title>如何自己架设一个ngrok服务端</title>
      <link>http://p4davan.80x86.io/blog/2017/06/11/how-to-setup-a-ngrok-server/</link>
      <pubDate>Sun, 11 Jun 2017 23:15:57 +0800</pubDate>
      
      <guid>http://p4davan.80x86.io/blog/2017/06/11/how-to-setup-a-ngrok-server/</guid>
      <description>前言 用过我MOD版的固件的都会发现, 在ngrok那里有两个程序可以切换,一个是ngrok-c, 另一个是ngrok-libev. 从实际使用来看</description>
    </item>
    
    <item>
      <title>关于远程支持</title>
      <link>http://p4davan.80x86.io/blog/2017/06/11/remote-support/</link>
      <pubDate>Sun, 11 Jun 2017 21:09:24 +0800</pubDate>
      
      <guid>http://p4davan.80x86.io/blog/2017/06/11/remote-support/</guid>
      <description>鉴于时间问题,不随意接受远程协助的请求. 以下内容仅适用于收到远程协助&amp;rdquo;邀请&amp;rdquo;或&amp;rdquo;许可&amp;rdquo;的情况</description>
    </item>
    
    <item>
      <title>为什么我的koolproxy规则不能自动更新</title>
      <link>http://p4davan.80x86.io/blog/2017/06/11/koolproxy-rules-update-problem/</link>
      <pubDate>Sun, 11 Jun 2017 17:32:15 +0800</pubDate>
      
      <guid>http://p4davan.80x86.io/blog/2017/06/11/koolproxy-rules-update-problem/</guid>
      <description>默认情况下,kp 会自动检测和更新规则的.然而现实确总是不如理想中那么美好. 有部分朋友反馈说不能更新.为避免一一回复浪费彼此的时候.我想是时候</description>
    </item>
    
    <item>
      <title>ss不工作怎么排查问题</title>
      <link>http://p4davan.80x86.io/blog/2017/06/11/how-to-debug-ss-problem/</link>
      <pubDate>Sun, 11 Jun 2017 16:30:53 +0800</pubDate>
      
      <guid>http://p4davan.80x86.io/blog/2017/06/11/how-to-debug-ss-problem/</guid>
      <description>0.不能正常工作的具体表现 在开启了Status Detection的情况下,Active SS Node那里没有显示绿色的字样:Working 查看插</description>
    </item>
    
    <item>
      <title>2017-06-10 固件 changelog</title>
      <link>http://p4davan.80x86.io/blog/2017/06/10/firmware-changelog-20170610/</link>
      <pubDate>Sat, 10 Jun 2017 22:44:35 +0800</pubDate>
      
      <guid>http://p4davan.80x86.io/blog/2017/06/10/firmware-changelog-20170610/</guid>
      <description>终于又迎来了一大波更新 五机齐发(D1,Y1,L1,K2,K2_256),准备开刷 虽然说是beta,不过在此之前群主已经测试多次.不出意外这就</description>
    </item>
    
    <item>
      <title>Migrate from Jekyll</title>
      <link>http://p4davan.80x86.io/blog/2015/10/10/migrate-from-jekyll/</link>
      <pubDate>Sat, 10 Oct 2015 13:07:31 +0200</pubDate>
      
      <guid>http://p4davan.80x86.io/blog/2015/10/10/migrate-from-jekyll/</guid>
      <description>Move static content to static Jekyll has a rule that any directory not starting with _ will be copied as-is to the _site output. Hugo keeps all static content under static. You should therefore move it all there. With Jekyll, something that looked like
▾ &amp;lt;root&amp;gt;/ ▾ images/ logo.png  should become
▾ &amp;lt;root&amp;gt;/ ▾ static/ ▾ images/ logo.png  Additionally, you&amp;rsquo;ll want any files that should reside at the root (such as CNAME) to be moved to static.</description>
    </item>
    
    <item>
      <title>Linked post</title>
      <link>http://p4davan.80x86.io/blog/2015/10/02/linked-post/</link>
      <pubDate>Fri, 02 Oct 2015 21:49:20 +0200</pubDate>
      
      <guid>http://p4davan.80x86.io/blog/2015/10/02/linked-post/</guid>
      <description>I&amp;rsquo;m a linked post in the menu. You can add other posts by adding the following line to the frontmatter:
menu = &amp;quot;main&amp;quot;  Lorem ipsum dolor sit amet, consectetur adipiscing elit. In mauris nulla, vestibulum vel auctor sed, posuere eu lorem. Aliquam consequat augue ut accumsan mollis. Suspendisse malesuada sodales tincidunt. Vivamus sed erat ac augue bibendum porta sed id ipsum. Ut mollis mauris eget ligula sagittis cursus. Aliquam id pharetra tellus.</description>
    </item>
    
    <item>
      <title>Go is for lovers</title>
      <link>http://p4davan.80x86.io/blog/2015/09/17/go-is-for-lovers/</link>
      <pubDate>Thu, 17 Sep 2015 13:47:08 +0200</pubDate>
      
      <guid>http://p4davan.80x86.io/blog/2015/09/17/go-is-for-lovers/</guid>
      <description>Hugo uses the excellent go html/template library for its template engine. It is an extremely lightweight engine that provides a very small amount of logic. In our experience that it is just the right amount of logic to be able to create a good static website. If you have used other template systems from different languages or frameworks you will find a lot of similarities in go templates.
This document is a brief primer on using go templates.</description>
    </item>
    
    <item>
      <title>Hugo is for lovers</title>
      <link>http://p4davan.80x86.io/blog/2015/08/03/hugo-is-for-lovers/</link>
      <pubDate>Mon, 03 Aug 2015 13:39:46 +0200</pubDate>
      
      <guid>http://p4davan.80x86.io/blog/2015/08/03/hugo-is-for-lovers/</guid>
      <description>Step 1. Install Hugo Goto hugo releases and download the appropriate version for your os and architecture.
Save it somewhere specific as we will be using it in the next step.
More complete instructions are available at installing hugo
Step 2. Build the Docs Hugo has its own example site which happens to also be the documentation site you are reading right now.
Follow the following steps:
 Clone the hugo repository Go into the repo Run hugo in server mode and build the docs Open your browser to http://localhost:1313  Corresponding pseudo commands:</description>
    </item>
    
    <item>
      <title>Creating a new theme</title>
      <link>http://p4davan.80x86.io/blog/2015/06/24/creating-a-new-theme/</link>
      <pubDate>Wed, 24 Jun 2015 13:50:46 +0200</pubDate>
      
      <guid>http://p4davan.80x86.io/blog/2015/06/24/creating-a-new-theme/</guid>
      <description>Introduction This tutorial will show you how to create a simple theme in Hugo. I assume that you are familiar with HTML, the bash command line, and that you are comfortable using Markdown to format content. I&amp;rsquo;ll explain how Hugo uses templates and how you can organize your templates to create a theme. I won&amp;rsquo;t cover using CSS to style your theme.
We&amp;rsquo;ll start with creating a new site with a very basic template.</description>
    </item>
    
  </channel>
</rss>